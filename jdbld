#!/usr/bin/bash

propertiesFile=".jdbld.properties"

if [ ! -r "$propertiesFile" ]; then
  cd `dirname $0`
fi

if [ ! -r "$propertiesFile" ]; then
  echo >&2 "File $propertiesFile must exist in root directory of build."
  exit 1
fi

getProperty() {
  cat "$propertiesFile" | while read line; do
    if expr match "$line" "^ *$1[ \t]*=" > /dev/null; then
      echo $line \
        | sed -E 's/^[[:space:]]*'$1'[[:space:]]*=[[:space:]]*(.*\S)[[:space:]]*$/\1/'
      return 1
    fi
  done
  if [ $? != 1 ]; then
    echo "$2"
  fi
}

# Get the executable jar

jdbldVersion=$(getProperty "jdbldVersion" "0.0.3")

if [ -n "$JDBLD_JAR" ]; then
  builderJar="$JDBLD_JAR"
elif ! expr >/dev/null "$jdbldVersion" : '.*-SNAPSHOT$'; then
  # Releases can easily be found
  repositoryBaseUrl="https://repo1.maven.org/maven2/org/jdrupes/jdrupes-builder"
  builderJar="$HOME/.jdbld/versions/jdrupes-builder-$jdbldVersion.jar"
  # Get if not already there
  if [ ! -r "$builderJar" ]; then
    mkdir -p $HOME/.jdbld/versions
    # Get version
    curl "$repositoryBaseUrl/$jdbldVersion/jdrupes-builder-$jdbldVersion.jar" \
      -o "$builderJar"
  fi
else
  # Snaphost are more difficult becaus ethey have no "guessable" file name.
  xmlstarlet=$(command -v "xmlstarlet")
  if [ $? -ne 0 ]; then
    echo >&2 "Need xmlstarlet to download a snapshot version"
    exit 1
  fi
  snapshotBaseUrl="https://central.sonatype.com/repository/maven-snapshots/org/jdrupes/jdrupes-builder"
  snapshotVersion=$(curl -s $snapshotBaseUrl/$jdbldVersion/maven-metadata.xml \
    | xmlstarlet sel -t -v "/metadata/versioning/snapshotVersions/snapshotVersion[extension='jar' and not(classifier)]/value")
  builderJar="$HOME/.jdbld/versions/jdrupes-builder-$snapshotVersion.jar"
  # Get if not already there
  if [ ! -r "$builderJar" ]; then
    mkdir -p $HOME/.jdbld/versions
    # Cleanup old snapshots
    snapBase=$(echo -n "$jdbldVersion" | sed 's/-SNAPSHOT$//')
    rm -f $HOME/.jdbld/versions/jdrupes-builder-$snapBase-*.jar
    # Get latest
    curl "$snapshotBaseUrl/$jdbldVersion/jdrupes-builder-$snapshotVersion.jar" \
      -o "$builderJar"
  fi
fi

if [ ! -r "$builderJar" ]; then
  echo >&2 "JDrupes Builder's executable jar not found."
  exit 1
fi

# Handle java related options

javaCmd=java
if [ -z "$JAVA_HOME" ]; then
  JAVA_HOME=$(getProperty "javaHome" "")
fi
if [ ! -z "$JAVA_HOME" ]; then
  javaCmd="$JAVA_HOME/bin/java"
fi

$javaCmd -Duser.language=en_US -jar "$builderJar" "$@"
